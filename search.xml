<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>FanHaolin&#39;s Blog for FYP Study</title>
    <url>/posts/4b7b/</url>
    <content><![CDATA[<h1 id="Welcome-to-OliverFan’s-Blog"><a href="#Welcome-to-OliverFan’s-Blog" class="headerlink" title="Welcome to OliverFan’s Blog"></a>Welcome to OliverFan’s Blog</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote>
<p>The aim of adding this blog is to demonstrate the learning process during the FYP,and also as a memo to record some important knowledge</p>
</blockquote>
<h3 id="Content-Introduction"><a href="#Content-Introduction" class="headerlink" title="Content Introduction"></a>Content Introduction</h3><table>
<thead>
<tr>
<th align="left">Item</th>
<th align="right">Usage</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Python</td>
<td align="right">Programming Skill</td>
</tr>
<tr>
<td align="left">Kivy</td>
<td align="right">UI Interface</td>
</tr>
<tr>
<td align="left">Deep Learning</td>
<td align="right">Wound Segmentation</td>
</tr>
</tbody></table>
<h3 id="Current-Content"><a href="#Current-Content" class="headerlink" title="Current Content"></a>Current Content</h3><ul>
<li><input checked disabled type="checkbox"> Fundamental Python</li>
<li><input checked disabled type="checkbox"> Kivy Framework</li>
<li><input disabled type="checkbox"> Deep Learning</li>
</ul>
<blockquote>
<p><strong>Note:</strong> Currently it is only basical introduced. </p>
</blockquote>
<h2 id="Feedback-amp-Bug-Report"><a href="#Feedback-amp-Bug-Report" class="headerlink" title="Feedback &amp; Bug Report"></a>Feedback &amp; Bug Report</h2><p>You can leave a message via Github or Email</p>
<ul>
<li>Github: <a href="https://github.com/TOESL100">https://github.com/TOESL100</a></li>
<li>Email: <a href="mailto:&#102;&#x68;&#108;&#x69;&#x65;&#x6c;&#116;&#x73;&#x38;&#x40;&#103;&#109;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#x6d;">&#102;&#x68;&#108;&#x69;&#x65;&#x6c;&#116;&#x73;&#x38;&#x40;&#103;&#109;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#x6d;</a></li>
</ul>
<hr>
<p>Thank you for reading this manual. Looking for your advice!</p>
]]></content>
      <tags>
        <tag>Introduction</tag>
      </tags>
  </entry>
  <entry>
    <title>Deep Learning-Activation Function</title>
    <url>/posts/a2d2/</url>
    <content><![CDATA[<blockquote>
<p><strong>激活函数</strong>（Activation Function)神经网络中将输入信号的总和转化为输出信号的的函数。其作用在于如何来激活输入信号的总和。<br>It converts the sum of the input signal to the output signal. Its role is to determine how to activate the sum of input signals.The activation function of neural network must use nonlinear function.</p>
</blockquote>
<a id="more"></a>

<hr>
<h2 id="几种常见的激活函数以及Python实现"><a href="#几种常见的激活函数以及Python实现" class="headerlink" title="几种常见的激活函数以及Python实现"></a>几种常见的激活函数以及Python实现</h2><p>以下主要简要介绍几种常见的激活函数以及python实现</p>
<h3 id="Sigmoid-Function"><a href="#Sigmoid-Function" class="headerlink" title="Sigmoid Function"></a>Sigmoid Function</h3><p>Sigmoid 函数的平滑性对神经网络的学习具有重要意义<br>神经网络中常用的一个激活函数为Sigmoid 函数，其数学表达式为：<br>$$    Sigmoid(x) = \dfrac{1}{1+e^{-x}} $$<br>其Python实现方法以及图示绘制为：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> mpl_toolkits<span class="token punctuation">.</span>axisartist <span class="token keyword">as</span> axisartist
<span class="token keyword">import</span> matplotlib


<span class="token keyword">def</span> <span class="token function">sigmoid</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    
<span class="token keyword">def</span> <span class="token function">plot_sigmoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>
    y <span class="token operator">=</span> sigmoid<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Sigmoid Function'</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true"># plt.xlabel('X Axis')</span>
    <span class="token comment" spellcheck="true"># plt.ylabel('Y Axis')</span>
    <span class="token comment" spellcheck="true"># plt.tight_layout()</span>
    ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'bottom'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'left'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">'bottom'</span><span class="token punctuation">)</span>
    ax<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_major_locator<span class="token punctuation">(</span>matplotlib<span class="token punctuation">.</span>ticker<span class="token punctuation">.</span>MultipleLocator<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">"sigmoid.png"</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    plot_sigmoid<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其结果展示如下：<br><img src="/posts/a2d2/Sigmoid.png" alt="Outcome for Sigmoid Function"></p>
<hr>
<h3 id="ReLU-Function"><a href="#ReLU-Function" class="headerlink" title="ReLU Function"></a>ReLU Function</h3><p><strong>ReLU 函数</strong>的全程为 Rectified Linear Unit，即意为<em>校正线性单元</em>。</p>
<p>其函数特征为：ReLU 函数在输入大于0时，直接输出该值；在输入小于0时，输出0，其python实现可以通过以下两种方式：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">relu</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">relu</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>补充：<strong>shape函数</strong>的功能是读取矩阵的长度，比如shape[0]就是读取矩阵第一维度的长度,相当于行数。</p>
</blockquote>
<hr>
<h3 id="Tanh-Function"><a href="#Tanh-Function" class="headerlink" title="Tanh Function"></a>Tanh Function</h3><p>Tanh Function 的数学表达式为：<br>$$<br>\begin{align}<br>        Tanh(x) &amp;= \dfrac{e^{x}-e^{-x}}{e^{x}+e^{-x}}<br>\end{align}<br>$$</p>
<p>其Python 的实现具体实现为：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">tanh</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>此函数的绘制思路与Sigmoid 函数基本相似，但此处本文采用区别于前的方法进行绘制：</p>
<pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">6.0</span><span class="token punctuation">,</span> <span class="token number">6.0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> tanh<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Tanh Function'</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'X Axis'</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Y Axis'</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">#plt.tight_layout()</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>此种方法绘制的图线<em>没有坐标轴</em>因此可能缺乏严谨性，可以加以区分，其绘制的结果如下图所示：<br><img src="/posts/a2d2/Tanh.png" alt="Outcome for Tanh Function"></p>
<hr>
<h2 id="线性函数与非线性函数"><a href="#线性函数与非线性函数" class="headerlink" title="线性函数与非线性函数"></a>线性函数与非线性函数</h2><p><strong>这里需要提到，Sigmoid 函数为非线性函数(阶跃函数也为非线性函数)</strong></p>
<blockquote>
<p><em>尤其需要注意的是：激活函数不能使用线性函数，如果使用线性函数，加深神经网络的层数就不具有意义。</em></p>
</blockquote>
<p>　　使用线性函数的问题在于，不管如何加深层数，总是存在与之结构等效的“无隐藏层的神经网络。比如下面这个简单的例子（来自《鱼书》）：<br>　　我们将线性函数$$h(x) = cx$$作为激活函数，将$$y(x) = h(h(h(x)))$$的运算简单对应为3层神经网络（实际的神经网络更加复杂）。那么这个运算会进行$$y(x) = c\times c\times c\times x $$的乘法运算，但是同样的运算可以由$$y = ax$$where: $$a=c^{3}$$这样的一次乘法运算表示。即表明，此次乘法运算可以由没有隐藏层到的神经网络表示，因而<strong>无法发挥多层网络</strong>的优势。<br>　　因此，为发挥叠加层所带来的优势，<strong>激活函数必须使用非线性函数</strong>。</p>
]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python PDF Generator</title>
    <url>/posts/40f8/</url>
    <content><![CDATA[<h2 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h2><blockquote>
<p>I met this question since the demand for the generation of digital records for the patients based on the analysis process.<br>It is intersting that python has the ability to generate files with <strong>different formats</strong> like .doc and .pdf .<br>Thus it is worth noting that the import package named <a href="https://www.reportlab.com/">ReportLab</a>.</p>
</blockquote>
<a id="more"></a>
<h2 id="2-Intstallation"><a href="#2-Intstallation" class="headerlink" title="2. Intstallation"></a>2. Intstallation</h2><p>The following code is used for installing ReportLab </p>
<pre class="line-numbers language-python"><code class="language-python">pip install reportlab <span class="token operator">-</span>i https<span class="token punctuation">:</span><span class="token operator">//</span>pypi<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>simple
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="2-1-Regist-Fontname"><a href="#2-1-Regist-Fontname" class="headerlink" title="2.1 Regist Fontname"></a>2.1 Regist Fontname</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> reportlab<span class="token punctuation">.</span>pdfbase <span class="token keyword">import</span> pdfmetrics
<span class="token keyword">from</span> reportlab<span class="token punctuation">.</span>pdfbase<span class="token punctuation">.</span>ttfonts <span class="token keyword">import</span> TTFont

pdfmetrics<span class="token punctuation">.</span>registerFont<span class="token punctuation">(</span>TTFont<span class="token punctuation">(</span><span class="token string">'Fontname'</span><span class="token punctuation">,</span> Fontname<span class="token punctuation">.</span>ttf<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p><strong>Note:</strong> The font package must be allocated in the project content.</p>
</blockquote>
<h3 id="2-2-Text-Generation"><a href="#2-2-Text-Generation" class="headerlink" title="2.2 Text Generation"></a>2.2 Text Generation</h3><p>The next step is using code to generate text,which is demonstrated as follow:</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> reportlab<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>styles <span class="token keyword">import</span> getSampleStyleSheet
<span class="token keyword">from</span> reportlab<span class="token punctuation">.</span>platypus <span class="token keyword">import</span> Paragraph<span class="token punctuation">,</span>SimpleDocTemplate
<span class="token keyword">from</span> reportlab<span class="token punctuation">.</span>lib <span class="token keyword">import</span>  colors


Style<span class="token operator">=</span>getSampleStyleSheet<span class="token punctuation">(</span><span class="token punctuation">)</span>
bt <span class="token operator">=</span> Style<span class="token punctuation">[</span><span class="token string">'Normal'</span><span class="token punctuation">]</span>     
<span class="token comment" spellcheck="true"># bt.fontName='Fontname'    #Customer-setting</span>
bt<span class="token punctuation">.</span>fontSize<span class="token operator">=</span><span class="token number">14</span>          <span class="token comment" spellcheck="true">#Fontsize</span>
bt<span class="token punctuation">.</span>firstLineIndent <span class="token operator">=</span> <span class="token number">32</span> <span class="token comment" spellcheck="true">#This attribute supports spaces at the beginning of the first line</span>
bt<span class="token punctuation">.</span>leading <span class="token operator">=</span> <span class="token number">20</span>         <span class="token comment" spellcheck="true">#This attribute is to set the line spacing</span>
ct<span class="token operator">=</span>Style<span class="token punctuation">[</span><span class="token string">'Normal'</span><span class="token punctuation">]</span>
<span class="token comment" spellcheck="true"># ct.fontName='Fontname'</span>
ct<span class="token punctuation">.</span>fontSize<span class="token operator">=</span><span class="token number">12</span>
ct<span class="token punctuation">.</span>alignment<span class="token operator">=</span><span class="token number">1</span>          <span class="token comment" spellcheck="true">#center alignment</span>
ct<span class="token punctuation">.</span>textColor <span class="token operator">=</span> colors<span class="token punctuation">.</span>red
hello <span class="token operator">=</span> Paragraph<span class="token punctuation">(</span><span class="token string">'hello world'</span><span class="token punctuation">,</span>bt<span class="token punctuation">)</span>
pdf<span class="token operator">=</span>SimpleDocTemplate<span class="token punctuation">(</span><span class="token string">'test.pdf'</span><span class="token punctuation">)</span>
pdf<span class="token punctuation">.</span>multiBuild<span class="token punctuation">(</span><span class="token punctuation">[</span>hello<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="3-Code-Trial"><a href="#3-Code-Trial" class="headerlink" title="3. Code Trial"></a>3. Code Trial</h2><p>The following code section can be found after I put the project at the <a href="https://github.com/TOESL100">GitHub</a>.</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">generate_pdf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    swelling <span class="token operator">=</span> gl<span class="token punctuation">.</span>get_value<span class="token punctuation">(</span><span class="token string">'swelling'</span><span class="token punctuation">)</span>
    wound_area <span class="token operator">=</span> area<span class="token punctuation">.</span>wound_area
    redness <span class="token operator">=</span> area<span class="token punctuation">.</span>redness_result
    infection <span class="token operator">=</span> area<span class="token punctuation">.</span>infection_result
    pus <span class="token operator">=</span> area<span class="token punctuation">.</span>pus_result

    Story <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    logo <span class="token operator">=</span> <span class="token string">"image/hospital1.png"</span>
    input_image <span class="token operator">=</span> <span class="token string">'uploadimage/input.jpg'</span>
    contour <span class="token operator">=</span> <span class="token string">'outputimage/contour.jpg'</span>
    formatted_time <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y-%m-%d %H:%M'</span><span class="token punctuation">)</span>
    full_name <span class="token operator">=</span> <span class="token string">"Fan Haolin"</span>

    im <span class="token operator">=</span> Image<span class="token punctuation">(</span>logo<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">*</span> inch<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">*</span> inch<span class="token punctuation">)</span>
    input_image <span class="token operator">=</span> Image<span class="token punctuation">(</span>input_image<span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">*</span> inch<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> inch<span class="token punctuation">)</span>
    contour <span class="token operator">=</span> Image<span class="token punctuation">(</span>contour<span class="token punctuation">,</span> <span class="token number">2.3</span> <span class="token operator">*</span> inch<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> inch<span class="token punctuation">)</span>
    component_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'Original Image'</span><span class="token punctuation">,</span> <span class="token string">'Contour Result'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                      <span class="token punctuation">[</span>input_image<span class="token punctuation">,</span> contour<span class="token punctuation">]</span><span class="token punctuation">,</span>
                      <span class="token punctuation">]</span>
    component_table <span class="token operator">=</span> Table<span class="token punctuation">(</span>component_data<span class="token punctuation">,</span> colWidths<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">230</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    component_table<span class="token punctuation">.</span>setStyle<span class="token punctuation">(</span>TableStyle<span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token punctuation">(</span><span class="token string">'TOPPADDING'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># (列,行)坐标</span>
        <span class="token punctuation">(</span><span class="token string">'BOTTOMPADDING'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 在默认用户空间中，原点（0,0）点位于左下角</span>
        <span class="token punctuation">(</span><span class="token string">'FONTSIZE'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 字体大小</span>
        <span class="token punctuation">(</span><span class="token string">'BACKGROUND'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> colors<span class="token punctuation">.</span>lightskyblue<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 设置第一行背景颜色</span>
        <span class="token punctuation">(</span><span class="token string">'LINEBEFORE'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> colors<span class="token punctuation">.</span>grey<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 设置表格左边线颜色为灰色，线宽为0.1</span>
        <span class="token punctuation">(</span><span class="token string">'TEXTCOLOR'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> colors<span class="token punctuation">.</span>royalblue<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 设置表格内文字颜色</span>
        <span class="token comment" spellcheck="true"># ('ALIGN', (0, 0), (-1, 0), 'MIDDLE'),  # 对齐</span>
        <span class="token punctuation">(</span><span class="token string">'VALIGN'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'MIDDLE'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 对齐</span>
        <span class="token punctuation">(</span><span class="token string">'GRID'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> colors<span class="token punctuation">.</span>red<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 设置表格框线为红色，线宽为0.5</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>im<span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true"># Story.append(im2)</span>
    styles <span class="token operator">=</span> getSampleStyleSheet<span class="token punctuation">(</span><span class="token punctuation">)</span>
    styles<span class="token punctuation">.</span>add<span class="token punctuation">(</span>ParagraphStyle<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"TitleStyle"</span><span class="token punctuation">,</span> alignment<span class="token operator">=</span>TA_CENTER<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> <span class="token string">'&lt;font size="26">Wound Analysis Report&lt;/font>'</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"TitleStyle"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    styles<span class="token punctuation">.</span>add<span class="token punctuation">(</span>ParagraphStyle<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'Letter'</span><span class="token punctuation">,</span> fontName<span class="token operator">=</span><span class="token string">"dour"</span><span class="token punctuation">,</span> alignment<span class="token operator">=</span>TA_JUSTIFY<span class="token punctuation">)</span><span class="token punctuation">)</span>
    styles<span class="token punctuation">.</span>add<span class="token punctuation">(</span>ParagraphStyle<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'Letter_title'</span><span class="token punctuation">,</span> fontName<span class="token operator">=</span><span class="token string">"times_b2"</span><span class="token punctuation">,</span> alignment<span class="token operator">=</span>TA_JUSTIFY<span class="token punctuation">)</span><span class="token punctuation">)</span>
    styles<span class="token punctuation">.</span>add<span class="token punctuation">(</span>ParagraphStyle<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'Corner'</span><span class="token punctuation">,</span> fontName<span class="token operator">=</span><span class="token string">"times_b2"</span><span class="token punctuation">,</span> alignment<span class="token operator">=</span>TA_CENTER<span class="token punctuation">)</span><span class="token punctuation">)</span>
    styles<span class="token punctuation">.</span>add<span class="token punctuation">(</span>ParagraphStyle<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'Justify'</span><span class="token punctuation">,</span> alignment<span class="token operator">=</span>TA_JUSTIFY<span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> <span class="token string">'&lt;font size="14">Generation Date:%s&lt;/font>'</span> <span class="token operator">%</span> formatted_time
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Letter"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> <span class="token string">'&lt;font size="14">Patient Name:%s&lt;/font>'</span> <span class="token operator">%</span> full_name
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Normal"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>component_table<span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f'<span class="token operator">&lt;</span>font size<span class="token operator">=</span><span class="token string">"14"</span><span class="token operator">></span>Swelling <span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;swelling&amp;#125;  &lt;/font>'</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Justify"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f'<span class="token operator">&lt;</span>font size<span class="token operator">=</span><span class="token string">"14"</span><span class="token operator">></span>Redness <span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;redness&amp;#125;  &lt;/font>'</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Justify"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f'<span class="token operator">&lt;</span>font size<span class="token operator">=</span><span class="token string">"14"</span><span class="token operator">></span>Pus <span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;pus&amp;#125;  &lt;/font>'</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Justify"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f'<span class="token operator">&lt;</span>font size<span class="token operator">=</span><span class="token string">"14"</span><span class="token operator">></span>Area <span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;wound_area&amp;#125;  &lt;/font>'</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Justify"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f'<span class="token operator">&lt;</span>font size<span class="token operator">=</span><span class="token string">"14"</span><span class="token operator">></span>Infection <span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;infection&amp;#125;  &lt;/font>'</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Justify"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># length=1,width=50</span>

    ptext <span class="token operator">=</span> <span class="token string">'&lt;font size="12">Dear %s:&lt;/font>'</span> <span class="token operator">%</span> full_name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Letter_title"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f<span class="token string">'&lt;font size="12">The above report is for reference only, please consult a professional doctor for '</span> \
            f<span class="token string">'details.&lt;/font> '</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Justify"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f<span class="token string">'&lt;font size="12">The Result will strictly abide by the doctor-patient confidentiality agreement.&lt;/font> '</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Justify"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f<span class="token string">'&lt;font size="12">Sincerely,&lt;/font>'</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Letter_title"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f<span class="token string">'&lt;font size="12">Wound Analysis Application&lt;/font>'</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Letter_title"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Spacer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ptext <span class="token operator">=</span> f<span class="token string">'&lt;font size="10">Copyright @ 2021 Wound Analysis All Rights Reserved.&lt;/font>'</span>
    Story<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Paragraph<span class="token punctuation">(</span>ptext<span class="token punctuation">,</span> styles<span class="token punctuation">[</span><span class="token string">"Corner"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    doc<span class="token punctuation">.</span>build<span class="token punctuation">(</span>Story<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Python Study</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Kivy Introduction and Trial</title>
    <url>/posts/81b9/</url>
    <content><![CDATA[<h2 id="Introducing-Kivy"><a href="#Introducing-Kivy" class="headerlink" title="Introducing Kivy"></a>Introducing Kivy</h2><blockquote>
<p><a href="https://kivy.org/#home">Kivy</a>-用于快速开发利用创新用户界面的应用程序（例如多点触摸应用程序）的开源Python库。<br>以下内容主要介绍 kivy 在Windows端的安装(基于Anoconda3,Pycharm)以及简单应用。</p>
</blockquote>
<a id="more"></a>

<h2 id="Kivy-Installation"><a href="#Kivy-Installation" class="headerlink" title="Kivy Installation"></a>Kivy Installation</h2><blockquote>
<p>涉及到的所有依赖均通过cmd中的pip-install安装完成，感谢<a href="https://pypi.tuna.tsinghua.edu.cn/simple">清华镜像源</a>提供的帮助。</p>
</blockquote>
<pre class="line-numbers language-python"><code class="language-python">pip install PACKAGES <span class="token operator">-</span>i https<span class="token punctuation">:</span><span class="token operator">//</span>pypi<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>simple <span class="token operator">-</span><span class="token operator">-</span>trusted<span class="token operator">-</span>host pypi<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>因为中国国内对kivy的普及程度不高，且多数app开发仍然使用原生的Java 语言作为底层基础，因而以下对kivy框架的背景、搭建、使用做一个简要的介绍</p>
</blockquote>
<h2 id="Kivy框架的安装与使用"><a href="#Kivy框架的安装与使用" class="headerlink" title="Kivy框架的安装与使用"></a>Kivy框架的安装与使用</h2><p>1.通过以下命令进行kivy框架的搭建与使用，主要有两种方法:<br>三行命令以安装Kivy:</p>
<pre class="line-numbers language-python"><code class="language-python">python <span class="token operator">-</span>m pip install docutils pygments pypiwin64 kivy<span class="token punctuation">.</span>deps<span class="token punctuation">.</span>sdl2 kivy<span class="token punctuation">.</span>deps<span class="token punctuation">.</span>glew
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python">python <span class="token operator">-</span>m pip install kivy<span class="token punctuation">.</span>deps<span class="token punctuation">.</span>gstreamer
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python">python <span class="token operator">-</span>m pip install kivy
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>值得注意的是，kivy<a href="https://kivy.org/doc/stable/gettingstarted/installation.html#install-pip)">官网</a>,针对windows的安装方法为：<br><strong>To install the stable version of Kivy, from the terminal do:</strong></p>
<pre class="line-numbers language-python"><code class="language-python">python <span class="token operator">-</span>m pip install kivy<span class="token punctuation">[</span>base<span class="token punctuation">]</span> kivy_examples <span class="token operator">-</span><span class="token operator">-</span>no<span class="token operator">-</span>binary kivy
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>2.安装kivy框架的官方示例</p>
<pre class="line-numbers language-python"><code class="language-python">python <span class="token operator">-</span>m pip install kivy_examples
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>3.验证kivy框架安装成功(Python IDLE)中运行</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> kivy<span class="token punctuation">.</span>app <span class="token keyword">import</span> App
<span class="token keyword">from</span> kivy<span class="token punctuation">.</span>uix<span class="token punctuation">.</span>button <span class="token keyword">import</span> Button
 
<span class="token keyword">class</span> <span class="token class-name">TestApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">build</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> Button<span class="token punctuation">(</span>text<span class="token operator">=</span><span class="token string">'FHL First App'</span><span class="token punctuation">)</span>
 
TestApp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其实现代码展示如下:<br><img src="/posts/81b9/kivy1.png" alt="Code for first Kivy App"></p>
<p>其运行结果展示如下：<br><img src="/posts/81b9/kivy2.png" alt="Outcome for first Kivy App"></p>
<p>以上仅为对kivy安装的简要说明，其详尽的功能有机会会根据项目实例进行介绍。</p>
]]></content>
      <categories>
        <category>Kivy Study</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Kivy</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 中的 类和对象</title>
    <url>/posts/bdb2/</url>
    <content><![CDATA[<p><strong>对象</strong> 是python 中不可回避的知识点，Python无处不对象。如果把一个人比作对象，人们通常从外观方面和行为方面进行描述，比如金发碧眼，长头发等，这些属于静态的外观特征，而游泳，唱歌等属于行为方面的动态对象 。</p>
<a id="more"></a>
<p>Python 中的<strong>对象</strong> 亦是如此，一个对象的特征称为<strong>“属性”</strong>，一个对象的行为称为<strong>“方法”</strong>。<br>总而言之，<strong>对象=属性+方法</strong></p>
<hr>
<h2 id="面对对象编程——self"><a href="#面对对象编程——self" class="headerlink" title="面对对象编程——self"></a>面对对象编程——self</h2><blockquote>
<p>如果将类比作图纸，那么由类实例化的对象才是真正可以住进去的房子。Python 中的self参数就是这样的道理，由同一个类可以生成无数对象，当第一个对象的方法被调用时，对象会将自身的引用作为第一个参数传给该方法，那么python就知道需要操作哪个对象的方法了。</p>
</blockquote>
<p>通过一个简单的例子理解这一思想。</p>
<h3 id="Code-block"><a href="#Code-block" class="headerlink" title="Code block"></a>Code block</h3><pre class="line-numbers language-python"><code class="language-python">@requires_authorization
<span class="token keyword">class</span> <span class="token class-name">Study</span><span class="token punctuation">:</span>
<span class="token keyword">def</span> <span class="token function">setNmae</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
<span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Who love studying?%s loves studying."</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>name<span class="token punctuation">)</span>

<span class="token operator">>></span><span class="token operator">></span> f <span class="token operator">=</span> Study<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> f<span class="token punctuation">.</span>setNmae<span class="token punctuation">(</span>Fan Haolin<span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> f<span class="token punctuation">.</span>study<span class="token punctuation">(</span><span class="token punctuation">)</span>
Who love studying?Fan Haolin loves studying<span class="token punctuation">.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
<h2 id="Python-魔法方法——-“init-”"><a href="#Python-魔法方法——-“init-”" class="headerlink" title="Python 魔法方法—— “init()”"></a>Python 魔法方法—— “<strong>init</strong>()”</h2><blockquote>
<p>通常把此种方法称为构造方法，其魔法体现在只要实例化一个对象，这个方法就会在对象被创建时自动调用。其实，实例化对象是可以传入参数的，这些参数会自动传入<strong>init</strong>()中，可以通过重写这个方法以自定义对象的初始化操作。</p>
</blockquote>
<p>同样的一个简单的例子。</p>
<h3 id="Code-block-1"><a href="#Code-block-1" class="headerlink" title="Code block"></a>Code block</h3><pre class="line-numbers language-python"><code class="language-python">@requires_authorization
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">class</span> <span class="token class-name">Study</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Who love studying?%s loves studying."</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>name<span class="token punctuation">)</span>

<span class="token operator">>></span><span class="token operator">></span> f <span class="token operator">=</span> Study<span class="token punctuation">(</span>Fan Haolin<span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> f<span class="token punctuation">.</span>study<span class="token punctuation">(</span><span class="token punctuation">)</span>
Who love studying?Fan Haolin loves studying<span class="token punctuation">.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Python Study</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
